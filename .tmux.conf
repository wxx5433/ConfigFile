# set default shell
set-option -g default-shell /bin/zsh

set-option -g prefix C-a

# Vi copypaste mode
set-window-option -g mode-keys vi
bind-key -t vi-copy v begin-selection
# works for osx, linux should use "xclip -in -selection clipboard" instead of pbcopy
# Can use "tmux list-keys -t vi-copy" to show all keybindings in copy mode
bind-key -t vi-copy y copy-pipe "pbcopy"  

############################################################################
# Global options
############################################################################
# large history
set-option -g history-limit 10000
 
# colors
setw -g mode-bg black
set-option -g default-terminal "screen-256color" #"xterm-256color" # "screen-256color"
set-option -g pane-active-border-fg green
 
# utf8 support
set-window-option -g utf8 on
 
# basic settings
set-window-option -g xterm-keys on # for vim
set-window-option -g mode-keys vi # vi key
set-window-option -g monitor-activity on
set-window-option -g window-status-current-fg white
setw -g window-status-current-attr reverse
 
# Automatically set window title
#setw -g automatic-rename
#set-window-option -g automatic-rename off
#set-option -g set-titles off
 
# use mouse # More on mouse support http://floriancrouzat.net/2010/07/run-tmux-with-mouse-support-in-mac-os-x-terminal-app/
#setw -g mode-mouse on
#setw -g mouse-resize-pane on
#set -g mouse-select-window on
#set -g mouse-select-pane on
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

###########################################################################
# Status Bar
############################################################################
set-option -g status-utf8 on
set-option -g status-justify right
set-option -g status-bg black # colour213 # pink
set-option -g status-fg cyan
set-option -g status-interval 5
set-option -g status-left-length 30
set-option -g status-left '#[fg=magenta]» #[fg=blue,bold]#T#[default]'
set-option -g status-right '#[fg=red,bold][[ #(git branch) branch ]] #[fg=cyan]»» #[fg=blue,bold]###S #[fg=magenta]%R %m-%d#(acpi | cut -d ',' -f 2)#[default]'
set-option -g visual-activity on
 
# Titles (window number, program name, active (or not)
# set-option -g set-titles on
# set-option -g set-titles-string '#H:#S.#I.#P #W #T'

############################################################################
# Unbindings
############################################################################
#unbind [ # copy mode bound to escape key
unbind j
unbind C-b # unbind default leader key
unbind '"' # unbind horizontal split
unbind %   # unbind vertical split

############################################################################
# Bindings
############################################################################
# reload tmux conf
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# new split in current pane (horizontal / vertical)
bind-key - split-window -v # split pane horizontally
bind-key \ split-window -h # split pane vertically

# list panes
bind-key Space list-panes

# break-pane
bind-key Enter break-pane

############################################################################
# panes
############################################################################
# Navigation ---------------------------------------------------------------
# use the vim motion keys to move between panes
#bind-key h select-pane -L
#bind-key j select-pane -D
#bind-key k select-pane -U
#bind-key l select-pane -R

# Resizing ---------------------------------------------------------------
bind-key c-h resize-pane -L 5
bind-key c-j resize-pane -D 5
bind-key c-k resize-pane -U 5
bind-key c-l resize-pane -R 5

# use vim motion keys while in copy mode
setw -g mode-keys vi

# smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
